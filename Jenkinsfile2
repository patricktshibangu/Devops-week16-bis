pipeline {
    agent any 
    tools {
        maven 'M2_HOME'
    }
    stages{
        stage('sonarqube scan'){
            agent {docker { image 'maven:3-amazoncorretto-17-debian' }}
             steps{
                withSonarQubeEnv('sonarserver'){ 

              sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=patricktshibangu_Devops-week16-bis'
            }
        }
    }
        stage('all maven commands2'){
            steps{
                sh 'mvn clean test compile install package'
            }
        }
        stage('upload artifact'){
            steps{

            
            
            sh 'curl -uadmin:AP9VphspKafqA5vUwnY9zbUnvd6 -T target/bio*.jar "http://172.31.89.131:8081/artifactory/geoapp2/"'
        }
    }
    stage('image build'){
        steps{
            sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 002334349531.dkr.ecr.us-east-1.amazonaws.com'
            sh 'docker build -t geoapp .'
        }
    }
    stage('docker push'){
        steps{
            sh 'docker tag geoapp:latest 002334349531.dkr.ecr.us-east-1.amazonaws.com/geoapp:${BUILD_ID}'
            sh 'docker push 002334349531.dkr.ecr.us-east-1.amazonaws.com/geoapp:${BUILD_ID}'
        }
    }
}
}
